linters-settings:
  dupl:
    threshold: 100
  exhaustive:
    check-generated: false
    default-signifies-exhaustive: true
  funlen:
    lines: 100
    statements: 50
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - octalLiteral
      - rangeValCopy # https://github.com/go-critic/go-critic/issues/1223
      - hugeParam # https://github.com/go-critic/go-critic/issues/1223
      - typeDefFirst # https://github.com/go-critic/go-critic/issues/1193
      - paramTypeCombine # https://github.com/go-critic/go-critic/issues/1193
    settings:
      hugeParam:
        sizeThreshold: 512
  gocyclo:
    min-complexity: 15
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  gomnd:
    # don't include the "operation" and "assign"
    checks:
      - argument
      - case
      - condition
      - return
    ignored-functions:
      - "strconv.*"
    ignored-numbers:
      - "0666"
      - "0600"
      - "0755"
      - "0744"
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-unused: false
    require-explanation: true
    require-specific: true
  godox:
    keywords:
      - BUG
      - FIXME

linters:
  enable:
    - bodyclose
    - depguard
    - dogsled
    - dupl
    - errcheck
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - revive
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - nolintlint
    - rowserrcheck
    - exportloopref
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
    - asciicheck
    - gochecknoglobals
    - gocognit
    - godot
    - godox
    - goerr113
    - nestif
    - prealloc
    - testpackage
    - gomodguard
    - predeclared
    - makezero
    - tenv
    - durationcheck
    - errorlint
    - exhaustive
    - noctx
    - sqlclosecheck
    - tenv
    - tparallel
    - wastedassign
    - asasalint
    - usestdlibvars
    - reassign

issues:
  # List of regexps of issue texts to exclude, empty list by default.
  # But independently from this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`. To list all
  # excluded by default patterns execute `golangci-lint run --help`
  #exclude:
  #  - abcdef

  max-issues-per-linter: 0
  max-same-issues: 0

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - source: "^var \\S+ = regexp.MustCompile\\("
      linters:
        - gochecknoglobals

    - path: main\.go
      source: "^\\t+defer logger.Sync()"
      linters:
        - errcheck

    - path: main\.go
      source: "^func main()"
      linters:
        - gocyclo
        - funlen

    - source: "^\\t_ \"net/http/pprof\""
      linters:
        - gosec

    - source: "^// (TODO|WARN|NOTE):.+"
      linters:
        - godot

    # IDEA dialect injections
    - source: "^// language=.+"
      linters:
        - godot

    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - gochecknoglobals
        - funlen
        - goconst
        - goerr113
        - noctx
        - errorlint

    # Exclude known linters from partially hard-vendored code,
    # which is impossible to exclude via "nolint" comments.
    - path: internal/hmac/
      text: "weak cryptographic primitive"
      linters:
        - gosec

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    - linters:
        - goerr113
      source: "^.*fmt.Errorf.+"
